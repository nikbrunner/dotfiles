vim:fileencoding=utf-8:ft=conf:foldmethod=marker

scrollback_lines   10000

## REGARDING THEMES ========================================
# Browse through existing themes with:
# $ kitty +kitten themes
# Or via alias:
# $ themes
# Reload with other Theme in Place with:
# $ kitty +kitten themes --reload-in=all Github Dark Default
# Or via alias:
# $ theme Nord
## =========================================================

# MacOS
macos_thicken_font 0.25
macos_custom_beam_cursor yes
macos_colorspace srgb

# Fonts
font_size 16
adjust_line_height  135%

font_family        JetBrainsMono Nerd Font
# font_family        Comic Code Ligatures
# font_family        Operator Mono
# font_family        Operator Mono Lig
# font_family        SF Mono
bold_font          auto
italic_font        auto
bold_italic_font   auto

# https://sw.kovidgoyal.net/kitty/conf/#keyboard-shortcuts
map cmd+t new_tab
map cmd+w close_tab
map cmd+shift+w close_window
map cmd+shift+i set_tab_title

map cmd+1 goto_tab 1
map cmd+2 goto_tab 2
map cmd+3 goto_tab 3
map cmd+4 goto_tab 4
map cmd+5 goto_tab 5
map cmd+6 goto_tab 6
map cmd+7 goto_tab 7
map cmd+8 goto_tab 8
map cmd+9 goto_tab 9

map ctrl+1 first_window
map ctrl+2 second_window
map ctrl+3 third_window
map ctrl+4 fourth_window
map ctrl+5 fifth_window
map ctrl+6 sixth_window
map ctrl+7 seventh_window
map ctrl+8 eighth_window
map ctrl+9 ninth_window

# Create a new window splitting the space used by the existing one so that
# the two windows are placed one above the other
map cmd+shift+j launch --location=hsplit

# Create a new window splitting the space used by the existing one so that
# the two windows are placed side by side
map cmd+shift+l launch --location=vsplit

# Create a new window splitting the space used by the existing one so that
# the two windows are placed side by side if the existing window is wide or
# one above the other if the existing window is tall.
map cmd+shift+s launch --location=split

# Rotate the current split, chaging its split axis from vertical to
# horizontal or vice versa
map cmd+shift+o layout_action rotate

map cmd+enter new_window
map cmd+shift+enter launch --cwd=current

# Move the active window in the indicated direction
# map cmd+shift+k move_window up
# map cmd+shift+h move_window left
# map cmd+shift+l move_window right
# map cmd+shift+j move_window down

# Switch focus to the neighboring window in the indicated direction
map cmd+h neighboring_window left
map cmd+l neighboring_window right
map cmd+k neighboring_window up
map cmd+j neighboring_window down

# Shapes
cursor_shape block
tab_bar_edge bottom
tab_bar_style separator
tab_bar_align center
tab_separator " "
tab_bar_margin_width 5.5
tab_bar_margin_height 10 5
active_tab_font_style bold
tab_title_template "{index}:{title}"

# enabled_layouts tall:bias=50;full_size=1;mirrored=false
enabled_layouts splits:split_axis=horizontal

# For NeoVim ZenMode
allow_remote_control socket-only
listen_on unix:/tmp/kitty

# Decoration
window_padding_width 15 25 10
hide_window_decorations titlebar-only

# background_image ~/Pictures/wallpapers/nord/nord_mojave_blurred.png
background_image_layout scaled
background_image_linear yes
background_opacity 1

inactive_text_alpha 0.9

# Session
startup_session ./session

# Fig
allow_remote_control true

# Fig Kitty Integration: Enabled
watcher ${HOME}/.fig/tools/kitty-integration.py
# End of Fig Kitty Integration

# BEGIN_KITTY_THEME
# Github Light Default
include current-theme.conf
# END_KITTY_THEME
