"use strict";var m=Object.defineProperty;var L=Object.getOwnPropertyDescriptor;var w=Object.getOwnPropertyNames;var G=Object.prototype.hasOwnProperty;var I=(n,e)=>{for(var t in e)m(n,t,{get:e[t],enumerable:!0})},N=(n,e,t,r)=>{if(e&&typeof e=="object"||typeof e=="function")for(let i of w(e))!G.call(n,i)&&i!==t&&m(n,i,{get:()=>e[i],enumerable:!(r=L(e,i))||r.enumerable});return n};var C=n=>N(m({},"__esModule",{value:!0}),n);var y={};I(y,{default:()=>f});module.exports=C(y);var S=require("react"),o=require("@raycast/api");var d=require("react"),c=require("@raycast/api");var a=async(n,e)=>{await c.LocalStorage.setItem(n,JSON.stringify(e))},u=async n=>{let e=await c.LocalStorage.getItem(n),t=typeof e>"u"?"":e;return t==""?[]:JSON.parse(t)};var s=require("react/jsx-runtime"),l=n=>{let e=0;n.forEach(t=>{t.id=e,e++})},P=(n,e)=>{let t=[...e];return n.forEach(r=>{let i=!1;e.forEach(p=>{r.name==p.name&&(i=!0)}),i||t.push(r)}),l(t),t},A=async(n,e)=>{if(e=="Merge1"){let r=(await u("localGroups")).concat(n.groups);l(r),await a("localGroups",r);let p=(await u("localPins")).concat(n.pins);l(p),await a("localPins",p),(0,o.showToast)({title:"Merged Pin data!"})}else if(e=="Merge2"){let t=n.groups,r=await u("localGroups"),i=P(t,r);l(i),await a("localGroups",i);let p=n.pins,O=await u("localPins"),g=P(p,O);l(g),await a("localPins",g),(0,o.showToast)({title:"Updated Pin data!"})}else e=="Replace"&&(await a("localGroups",n.groups),await a("localPins",n.pins),(0,o.showToast)({title:"Replaced Pin data!"}));(0,o.popToRoot)()},_=(n,e)=>{let t=null;try{let r=JSON.parse(n);"groups"in r||(t="Group data missing from JSON string!"),"pins"in r||(t="Pin data missing from JSON string!")}catch{t="Please enter a valid JSON string!"}e(t||void 0)},x=()=>{let[n,e]=(0,S.useState)();return(0,s.jsxs)(o.Form,{actions:(0,s.jsx)(o.ActionPanel,{children:(0,s.jsx)(o.Action.SubmitForm,{icon:o.Icon.ChevronRight,onSubmit:t=>{let r=JSON.parse(t.jsonStringField);Promise.resolve(A(r,t.importMethodField))}})}),children:[(0,s.jsxs)(o.Form.Dropdown,{id:"importMethodField",title:"Import Method",defaultValue:"Replace",info:`'Merge, Maintain duplicates' keeps existing and newly specified items, potentially producing duplicate entries.
      
'Merge, Remove duplicates' keeps all existing items and any new items with a unique name.
      
'Replace all data' removes existing items and add the newly specified items.`,children:[(0,s.jsx)(o.Form.Dropdown.Item,{title:"Merge, Maintain duplicates",value:"Merge1"},"Merge1"),(0,s.jsx)(o.Form.Dropdown.Item,{title:"Merge, Remove duplicates",value:"Merge2"},"Merge2"),(0,s.jsx)(o.Form.Dropdown.Item,{title:"Replace all data",value:"Replace"},"Replace")]}),(0,s.jsx)(o.Form.TextArea,{id:"jsonStringField",title:"JSON String",placeholder:"Enter a JSON string...",error:n,onChange:t=>_(t,e),info:`Must be a valid JSON string specifying groups and pins. For example:

{"groups":[{"name":"Group","icon":"Plus","id":1}],"pins":[{"name":"Pin","url":"https://google.com","icon":"Link","group":"Group","id":1}]}`})]})};function f(){return(0,s.jsx)(x,{})}0&&(module.exports={});
